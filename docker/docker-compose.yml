version: '3.9'

services:
  web:
    image: docker.io/bref/fpm-dev-gateway:1.5.1
    container_name: our-wedding-website-web
    ports:
      - 8080:80
    volumes:
      - ../app/public:/var/task/public
    depends_on:
      - php
    networks:
      - app
    environment:
      HANDLER: public/index.php
      DOCUMENT_ROOT: public

  php:
    image: ghcr.io/eddmann/our-wedding-website:dev-e71f655
    #build:
    #  context: ../
    #  dockerfile: docker/Dockerfile
    container_name: our-wedding-website-php
    volumes:
      - ../app:/var/task
    depends_on:
      - postgres
      - dynamodb
    networks:
      - app
    environment:
      APP_ENV: dev
      APP_SECRET: secret
      DATABASE_URL: 'postgresql://user:password@postgres:5432/db?serverVersion=10.14&charset=utf8'
      MAILER_DSN: 'smtp://mailhog:1025'
      EMAIL_NOTIFIER_TO: 'to@email.com'
      EMAIL_NOTIFIER_FROM: 'from@email.com'
      ADMIN_PASSWORD: password
      PAGE_CONTENT: '{}'
      DYNAMODB_ENDPOINT: 'http://dynamodb:8000'
      DYNAMODB_EVENT_TABLE: 'event-store'
      DYNAMODB_PROJECTION_TABLE: 'projections'
      AWS_ACCESS_KEY_ID: id
      AWS_SECRET_ACCESS_KEY: key

  postgres:
    image: docker.io/postgres:10.14-alpine
    container_name: our-wedding-website-postgres
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - app
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
      TZ: Europe/London

  dynamodb:
    image: docker.io/amazon/dynamodb-local:1.18.0
    container_name: our-wedding-website-dynamodb
    ports:
      - 8000:8000
    command:
      - '-jar'
      - 'DynamoDBLocal.jar'
      - '-inMemory'
      - '-sharedDb'
    networks:
      - app

  mailhog:
    image: docker.io/mailhog/mailhog:v1.0.1
    container_name: our-wedding-website-mailhog
    ports:
      - 8025:8025
    networks:
      - app

volumes:
  postgres:
    driver: local

networks:
  app:
