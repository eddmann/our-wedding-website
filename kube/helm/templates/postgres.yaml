apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: {{ .Release.Namespace }}
  labels:
    app: postgres
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: postgres
      port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres
  namespace: {{ .Release.Namespace }}
data:
  postgres.conf: |-
    {{- .Files.Get "resources/postgres.conf" | nindent 4 }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: postgres
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
      annotations:
        checksum/config: {{ .Files.Get "resources/postgres.conf" | sha256sum }}
    spec:
      volumes:
        - name: postgres-config
          configMap:
            name: postgres
      containers:
        - name: postgres
          image: {{ .Values.postgres.image | quote }}
          args: ['-c', 'config_file=/etc/postgres.conf']
          imagePullPolicy: IfNotPresent
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_DB
              value: our-wedding
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: password
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready --host $POD_IP
            failureThreshold: 6
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready --host $POD_IP
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          volumeMounts:
            - name: postgres
              mountPath: /var/lib/postgresql/data/pgdata
              subPath: postgres-db
            - name: postgres-config
              mountPath: /etc/postgres.conf
              subPath: postgres.conf
  volumeClaimTemplates:
    - metadata:
        name: postgres
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.postgres.storageClassName | quote }}
        resources:
          requests:
            storage: {{ .Values.postgres.volumeSize | quote }}
