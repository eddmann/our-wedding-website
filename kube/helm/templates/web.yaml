apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: {{ .Release.Namespace }}
  labels:
    app: web
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  labels:
    app: web
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.web.replicas }}
  selector:
    matchLabels:
      app: web
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: web
    spec:
      imagePullSecrets:
        - name: {{ .Values.app.imagePullSecret }}
      containers:
        - name: web
          image: {{ .Values.app.image | quote }}
          imagePullPolicy: Always
          env:
          {{- range $name, $item := .Values.app.env }}
            - name: {{ $name }}
              {{- $item | toYaml | nindent 14 }}
          {{- end }}
            - name: CONTAINER_ROLE
              value: web
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web
  namespace: our-wedding-website
  annotations:
    kubernetes.io/ingress.class: traefik
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - secretName: web-tls
      hosts:
        - {{ .Values.web.hostname }}
  rules:
    - host: {{ .Values.web.hostname }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web
                port:
                  number: 80
